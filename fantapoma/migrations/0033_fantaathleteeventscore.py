# Generated by Django 4.1.2 on 2024-04-12 19:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0017_alter_crew_result'),
        ('fantapoma', '0032_alter_player_franchs'),
    ]

    operations = [
        migrations.CreateModel(
            name='FantaAthleteEventScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ficarra_video', models.BooleanField(default=False, verbose_name='Video "A CANNONE" con Ficarra')),
                ('offered_food', models.BooleanField(default=False, verbose_name='Offrire cibo')),
                ('photo_jumping', models.BooleanField(default=False, verbose_name='Foto con salto in premiazione')),
                ('selfie_coach', models.BooleanField(default=False, verbose_name='Selfie con un allenatore di Secondo Livello o superiore')),
                ('drink_to_coach', models.BooleanField(default=False, verbose_name='Offrire da bere ad un allenatore di Primo Livello o superiore')),
                ('selfie_franchina', models.BooleanField(default=False, verbose_name='Selfie con Bruno Franchina')),
                ('highfive_ficarra', models.BooleanField(default=False, verbose_name='Batticinque a Ficarra')),
                ('vittoria_video', models.BooleanField(default=False, verbose_name='Video "VITTORIA PER LA CANOTTIERI PALERMO" con Vito Scarpello')),
                ('shaking_hands', models.BooleanField(default=False, verbose_name='Foto con stretta di mano a un avversario di un altro club')),
                ('selfie_miele', models.BooleanField(default=False, verbose_name='Selfie con Miele')),
                ('anger_beni', models.BooleanField(default=False, verbose_name='Far arrabbiare Beni')),
                ('stop_before_end', models.BooleanField(default=False, verbose_name='Fermarsi prima del traguardo')),
                ('coming_late', models.BooleanField(default=False, verbose_name='Arrivare in ritardo')),
                ('fall_in_water', models.BooleanField(default=False, verbose_name='Cadere in acqua')),
                ('fight_adversary', models.BooleanField(default=False, verbose_name='Litigare con un avversario')),
                ('not_throwing_garbage', models.BooleanField(default=False, verbose_name='Non gettare la spazzatura')),
                ('out_of_buoys', models.BooleanField(default=False, verbose_name='Tagliare il traguardo fuori dalle boe')),
                ('bad_name_pronunciation', models.BooleanField(default=False, verbose_name='Nome pronunciato male dal giudice di partenza')),
                ('last_to_go', models.BooleanField(default=False, verbose_name='Ultimo a gareggiare')),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fantapoma.fantaathlete')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'unique_together': {('athlete', 'event')},
            },
        ),
    ]
